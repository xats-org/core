name: CI

on:
  push:
    branches: 
      - main
      - 'v*.*.*'  # Version branches (v0.2.0, v0.3.0, etc.)
  pull_request:
    branches: 
      - main
      - 'v*.*.*'  # PRs targeting version branches

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run linter
      run: pnpm run lint
      
    - name: Run formatter check
      run: pnpm run format:check

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build packages
      run: pnpm run build
      
    - name: Type check
      run: pnpm run typecheck

  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20, 22]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build project
      run: pnpm run build
      
    - name: Run tests
      run: pnpm run test:run
      
    - name: Run tests with coverage
      run: pnpm run test:coverage
      if: matrix.node-version == 20
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.node-version == 20
      with:
        files: ./coverage/lcov.info,./packages/*/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  validate-examples:
    name: Validate Example Documents
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build project
      run: pnpm run build
      
    - name: Validate example documents
      run: |
        # Run validation through the CLI package
        pnpm --filter @xats/cli run validate:examples
        
    - name: Test CLI commands
      run: |
        # Test CLI help and version
        pnpm --filter @xats/cli run cli -- --help
        pnpm --filter @xats/cli run cli -- --version

  schema-validation:
    name: Validate JSON Schema
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Validate schema syntax
      run: pnpm --filter @xats/schema run validate

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run security audit
      run: pnpm audit --audit-level=high || true
      continue-on-error: true
      
    - name: Check for production vulnerabilities
      run: pnpm audit --audit-level=high --production

  build:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: [test, lint, typecheck]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build project with Turborepo
      run: pnpm run build
      env:
        TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
        TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      
    - name: Check package sizes
      run: |
        # Install size-limit if needed
        pnpm add -D @size-limit/preset-small-lib @size-limit/file
        # Run size checks for all packages
        pnpm run size || true
      
    - name: Create package artifacts
      run: |
        # Pack all packages for release preview
        pnpm --filter './packages/*' pack
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: npm-packages
        path: 'packages/*/*.tgz'
        retention-days: 7

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build project
      run: pnpm run build
      
    - name: Run integration tests
      run: pnpm run test:integration
      
    - name: Test package linking
      run: |
        # Test that packages can be linked locally
        cd packages/cli
        pnpm link --global
        xats --version
        
    - name: Test cross-package functionality
      run: |
        # Run end-to-end tests that verify package integration
        pnpm run test:e2e

  performance:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build project
      run: pnpm run build
      
    - name: Run benchmarks
      run: pnpm run bench || true
      
    - name: Check bundle sizes
      run: pnpm run size || true

  docs:
    name: Documentation Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build documentation
      run: pnpm run docs:build || true
      
    - name: Check for broken links
      run: pnpm run docs:check-links || true