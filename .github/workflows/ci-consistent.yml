name: CI (Consistent Names)

# This workflow uses consistent job IDs that match branch protection requirements
# DO NOT change job names without updating branch protection rules!

on:
  push:
    branches: 
      - main
      - 'v*.*.*'  # Version branches
  pull_request:
    branches: 
      - main
      - 'v*.*.*'  # PRs targeting version branches

jobs:
  # CRITICAL: These job names create the status checks referenced in branch protection
  # If you change these, you MUST update:
  # 1. .github/BRANCH_PROTECTION.md
  # 2. .github/scripts/setup-branch-protection.sh
  # 3. All existing branch protection rules
  
  lint:
    name: Lint  # Creates "Lint" status check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - run: npm ci
    - run: npm run lint

  test-node-18:
    name: Test on Node.js 18  # Creates "Test on Node.js 18" status check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    - run: npm run typecheck
    - run: npm run test:run

  test-node-20:
    name: Test on Node.js 20  # Creates "Test on Node.js 20" status check (REQUIRED)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    - run: npm run typecheck
    - run: npm run test:run
    - run: npm run test:coverage
    - uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        fail_ci_if_error: false

  test-node-22:
    name: Test on Node.js 22  # Creates "Test on Node.js 22" status check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    - run: npm run typecheck
    - run: npm run test:run

  security-audit:
    name: Security Audit  # Creates "Security Audit" status check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - run: npm ci
    - run: npm audit --audit-level=high --production

  validate-json-schema:
    name: Validate JSON Schema  # Creates "Validate JSON Schema" status check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - run: npm install -g ajv-cli
    - run: |
        for schema in schemas/*/xats.json; do
          echo "Validating $schema..."
          ajv compile -s "$schema" --strict=false || true
        done

  validate-example-documents:
    name: Validate Example Documents  # Creates "Validate Example Documents" status check
    runs-on: ubuntu-latest
    needs: [test-node-20]  # Needs the validator to be built
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    - run: |
        # Validate test fixtures
        npm run validate test/fixtures/valid-minimal.json
        
        # Validate examples if they exist
        if [ -f examples/adaptive-pathway-example.json ]; then
          npm run validate examples/adaptive-pathway-example.json
        fi
        
        # Test CLI commands
        npm run validate -- --help
        npm run validate -- --version

  build-and-package:
    name: Build and Package  # Creates "Build and Package" status check
    runs-on: ubuntu-latest
    needs: [test-node-20, lint]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    - run: npm pack
    - uses: actions/upload-artifact@v4
      with:
        name: npm-package
        path: '*.tgz'
        retention-days: 7

  integration-tests:
    name: Integration Tests  # Creates "Integration Tests" status check
    runs-on: ubuntu-latest
    needs: [build-and-package]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    - run: |
        # Test global installation
        npm link
        which xats-validate
        xats-validate --version
        
        # Test validation workflow
        xats-validate test/fixtures/valid-minimal.json
        
        # Test that invalid documents fail
        ! xats-validate test/fixtures/invalid-missing-required.json || exit 1
        
        # Test CLI commands
        xats-validate versions
        xats-validate schema

  # Summary job to ensure all required checks pass
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: 
      - lint
      - test-node-18
      - test-node-20
      - test-node-22
      - security-audit
      - validate-json-schema
      - validate-example-documents
      - build-and-package
      - integration-tests
    if: always()
    steps:
    - name: Check results
      run: |
        if [ "${{ contains(needs.*.result, 'failure') }}" == "true" ]; then
          echo "❌ One or more CI checks failed"
          exit 1
        else
          echo "✅ All CI checks passed successfully"
        fi