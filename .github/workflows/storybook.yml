name: Storybook

on:
  push:
    branches:
      - main
      - 'v*.*.*'
    paths:
      - 'packages/*/src/**'
      - '.storybook/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
  pull_request:
    branches:
      - main
      - 'v*.*.*'
    paths:
      - 'packages/*/src/**'
      - '.storybook/**'
      - 'package.json'
      - 'pnpm-lock.yaml'

jobs:
  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.15.0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build packages
      run: pnpm run build
      
    - name: Build Storybook
      run: pnpm run storybook:build
      
    - name: Upload Storybook artifacts
      uses: actions/upload-artifact@v4
      with:
        name: storybook-static
        path: storybook-static
        retention-days: 7
        
  test-storybook:
    name: Test Storybook
    runs-on: ubuntu-latest
    needs: [build-storybook]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.15.0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Download Storybook artifacts
      uses: actions/download-artifact@v4
      with:
        name: storybook-static
        path: storybook-static
        
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run Storybook tests
      run: |
        npx http-server storybook-static --port 6006 --silent &
        npx wait-on http://localhost:6006
        pnpm run storybook:test || true
        
  deploy-storybook:
    name: Deploy Storybook to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-storybook]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Download Storybook artifacts
      uses: actions/download-artifact@v4
      with:
        name: storybook-static
        path: storybook-static
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: storybook-static
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4